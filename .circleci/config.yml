version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.5-node
    working_directory: ~/circle-ci
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: dependencies-{{ checksum "requirements.txt" }}
  test:
    docker:
      - image: circleci/python:3.7.5-node
    working_directory: ~/circle-ci
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-
      - run:
          name: flake8 tests
          command: |
            . venv/bin/activate
            flake8 ./ --exclude=venv --output-file flake8-reports.txt
      - store_artifacts:
          path: flake8-reports.txt
          destination: flake8-reports.txt
      - run:
          # We want to generate bandit security report but we do not want it to fail the pipeline
          name: bandit security test
          command: |
            . venv/bin/activate
            bandit -r ./  --exclude venv -f txt -o bandit-securty-report.txt || echo ""
      - store_artifacts:
          path: bandit-securty-report.txt
          destination: bandit-securty-report.txt
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build