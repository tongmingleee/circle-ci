version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.5-node
    working_directory: ~/circle-ci
    steps:
      - checkout
      # Download and cache dependencies
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
            - /usr/local/bin
            - /usr/local/lib/python3.7/site-packages
          key: v1-dependencies-{{ checksum "requirements.txt" }}
  test:
    docker:
      - image: circleci/python:3.7.5-node
    working_directory: ~/circle-ci
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: flake8 tests
          command: |
            ls
            . venv/bin/activate
            flake8 ./ --exclude=venv --output-file flake8-reports && echo "f"
      - store_artifacts:
          path: flake8-reports
          destination: flake8-reports
      - run:
          name: bandit security test
          command: |
            python3 -m venv venv
            . venv/bin/activate
            bandit -r ./  --exclude venv -f txt -o bandit-securty-report.txt
      - store_artifacts:
          path: bandit-securty-report.txt
          destination: bandit-securty-report.txt
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build